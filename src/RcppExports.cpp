// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// plot_irr
bool plot_irr(Nullable<DataFrame> points_df, Nullable<std::string> mesh_string_input, bool doomhud, char video_driver);
RcppExport SEXP Rirrlicht_plot_irr(SEXP points_dfSEXP, SEXP mesh_string_inputSEXP, SEXP doomhudSEXP, SEXP video_driverSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Nullable<DataFrame> >::type points_df(points_dfSEXP);
    Rcpp::traits::input_parameter< Nullable<std::string> >::type mesh_string_input(mesh_string_inputSEXP);
    Rcpp::traits::input_parameter< bool >::type doomhud(doomhudSEXP);
    Rcpp::traits::input_parameter< char >::type video_driver(video_driverSEXP);
    rcpp_result_gen = Rcpp::wrap(plot_irr(points_df, mesh_string_input, doomhud, video_driver));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"Rirrlicht_plot_irr", (DL_FUNC) &Rirrlicht_plot_irr, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rirrlicht(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
